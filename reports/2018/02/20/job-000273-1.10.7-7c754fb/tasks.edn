({:name "chromex",
  :description "function chromex from canary/projects/binaryage.clj:7",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "cljs-devtools",
  :description "function cljs-devtools from canary/projects/binaryage.clj:4",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "cljs-oops",
  :description "function cljs-oops from canary/projects/binaryage.clj:10",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "cljs-zones",
  :description "function cljs-zones from canary/projects/binaryage.clj:16",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-1",
  :description "function coal-mine-1 from canary/projects/mfikes.clj:20",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-2",
  :description "function coal-mine-2 from canary/projects/mfikes.clj:24",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-3",
  :description "function coal-mine-3 from canary/projects/mfikes.clj:28",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-4",
  :description "function coal-mine-4 from canary/projects/mfikes.clj:32",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-5",
  :description "function coal-mine-5 from canary/projects/mfikes.clj:36",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "env-config",
  :description "function env-config from canary/projects/binaryage.clj:13",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "planck",
  :description "function planck from canary/projects/mfikes.clj:4",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "lumo",
  :description "function lumo from canary/projects/lumo.clj:4",
  :enabled true,
  :enabled-reason "enabled because matching --only 'lumo'",
  :result
  {:status :exception,
   :report
   "```\nException: clojure.lang.ExceptionInfo: Travis API responded with invalid JSON: JSON error (unexpected character): a\naccess denied {}\n\tat clojure.core$ex_info.invokeStatic(core.clj:4739)\n\tat clojure.core$ex_info.invoke(core.clj:4739)\n\tat canary.runner.utils$ex.invokeStatic(utils.clj:39)\n\tat canary.runner.utils$ex.doInvoke(utils.clj:36)\n\tat clojure.lang.RestFn.invoke(RestFn.java:410)\n\tat canary.runner.travis$parse_response.invokeStatic(travis.clj:25)\n\tat canary.runner.travis$parse_response.invoke(travis.clj:21)\n\tat canary.runner.travis$inspect_api_response.invokeStatic(travis.clj:28)\n\tat canary.runner.travis$inspect_api_response.invoke(travis.clj:27)\n\tat canary.runner.travis$talk_to_travis_api_BANG_.invokeStatic(travis.clj:35)\n\tat canary.runner.travis$talk_to_travis_api_BANG_.invoke(travis.clj:32)\n\tat canary.runner.travis$non_throttled_post_to_travis_api_BANG_.invokeStatic(travis.clj:50)\n\tat canary.runner.travis$non_throttled_post_to_travis_api_BANG_.invoke(travis.clj:43)\n\tat clojure.lang.AFn.applyToHelper(AFn.java:165)\n\tat clojure.lang.AFn.applyTo(AFn.java:144)\n\tat clojure.core$apply.invokeStatic(core.clj:657)\n\tat clojure.core$apply.invoke(core.clj:652)\n\tat canary.runner.travis$throttled_post_to_travis_api_BANG_.invokeStatic(travis.clj:61)\n\tat canary.runner.travis$throttled_post_to_travis_api_BANG_.doInvoke(travis.clj:58)\n\tat clojure.lang.RestFn.invoke(RestFn.java:457)\n\tat canary.runner.travis$trigger_build_BANG_.invokeStatic(travis.clj:94)\n\tat canary.runner.travis$trigger_build_BANG_.invoke(travis.clj:81)\n\tat canary.runner.travis$request_build_and_wait_for_results_BANG_.invokeStatic(travis.clj:224)\n\tat canary.runner.travis$request_build_and_wait_for_results_BANG_.invoke(travis.clj:223)\n\tat canary.runner.travis$request_build_BANG_.invokeStatic(travis.clj:241)\n\tat canary.runner.travis$request_build_BANG_.invoke(travis.clj:236)\n\tat canary.projects.lumo$lumo.invokeStatic(lumo.clj:5)\n\tat canary.projects.lumo$lumo.invoke(lumo.clj:4)\n\tat canary.runner.jobs$execute_task_BANG_.invokeStatic(jobs.clj:23)\n\tat canary.runner.jobs$execute_task_BANG_.invoke(jobs.clj:20)\n\tat canary.runner.jobs$try_execute_task_BANG_.invokeStatic(jobs.clj:28)\n\tat canary.runner.jobs$try_execute_task_BANG_.invoke(jobs.clj:25)\n\tat canary.runner.jobs$spawn_task_BANG_$fn__10742.invoke(jobs.clj:38)\n\tat clojure.core.async$thread_call$fn__6995.invoke(async.clj:442)\n\tat clojure.lang.AFn.run(AFn.java:22)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n\n```"}})
