({:name "chromex",
  :description "function chromex from canary/projects/binaryage.clj:7",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "cljs-devtools",
  :description "function cljs-devtools from canary/projects/binaryage.clj:4",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "cljs-oops",
  :description "function cljs-oops from canary/projects/binaryage.clj:10",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "cljs-zones",
  :description "function cljs-zones from canary/projects/binaryage.clj:16",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-1",
  :description "function coal-mine-1 from canary/projects/mfikes.clj:7",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-2",
  :description "function coal-mine-2 from canary/projects/mfikes.clj:11",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-3",
  :description "function coal-mine-3 from canary/projects/mfikes.clj:15",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-4",
  :description "function coal-mine-4 from canary/projects/mfikes.clj:19",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "coal-mine-5",
  :description "function coal-mine-5 from canary/projects/mfikes.clj:23",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "env-config",
  :description "function env-config from canary/projects/binaryage.clj:13",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "planck",
  :description "function planck from canary/projects/planck_repl.clj:4",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "side-fx",
  :description "function side-fx from canary/projects/cljsrn.clj:4",
  :enabled false,
  :enabled-reason "disabled because not matching --only or --include options"}
 {:name "closurelatest",
  :description "function closurelatest from canary/projects/mfikes.clj:30",
  :enabled true,
  :enabled-reason "enabled because matching --only 'closurelatest'",
  :result
  {:status :exception,
   :report
   "```\nException: clojure.lang.ExceptionInfo: Received unrecognized Travis request state '' {}\n\tat clojure.core$ex_info.invokeStatic(core.clj:4739)\n\tat clojure.core$ex_info.invoke(core.clj:4739)\n\tat canary.runner.utils$ex.invokeStatic(utils.clj:39)\n\tat canary.runner.utils$ex.doInvoke(utils.clj:36)\n\tat clojure.lang.RestFn.invoke(RestFn.java:410)\n\tat canary.runner.travis$determine_request_state.invokeStatic(travis.clj:142)\n\tat canary.runner.travis$determine_request_state.invoke(travis.clj:132)\n\tat canary.runner.travis$monitor_request_status_BANG_.invokeStatic(travis.clj:198)\n\tat canary.runner.travis$monitor_request_status_BANG_.invoke(travis.clj:189)\n\tat canary.runner.travis$request_build_and_wait_for_results_BANG_.invokeStatic(travis.clj:229)\n\tat canary.runner.travis$request_build_and_wait_for_results_BANG_.invoke(travis.clj:226)\n\tat canary.runner.travis$request_build_BANG_.invokeStatic(travis.clj:244)\n\tat canary.runner.travis$request_build_BANG_.invoke(travis.clj:239)\n\tat canary.projects.mfikes$closurelatest.invokeStatic(mfikes.clj:31)\n\tat canary.projects.mfikes$closurelatest.invoke(mfikes.clj:30)\n\tat canary.runner.jobs$execute_task_BANG_.invokeStatic(jobs.clj:25)\n\tat canary.runner.jobs$execute_task_BANG_.invoke(jobs.clj:21)\n\tat canary.runner.jobs$try_execute_task_BANG_.invokeStatic(jobs.clj:30)\n\tat canary.runner.jobs$try_execute_task_BANG_.invoke(jobs.clj:27)\n\tat canary.runner.jobs$spawn_task_BANG_$fn__10806.invoke(jobs.clj:48)\n\tat canary.runner.threads$spawn_thread_fn$work__10783.invoke(threads.clj:19)\n\tat clojure.lang.AFn.run(AFn.java:22)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n\n```"}})
